
USE CASE: Login Page with Custom Login Form
ID: UC-LOGIN-002

ACTORS:
- admin
- you
- user

PRECONDITIONS:
1. Username and password input
2. Username and password input
3. Custom login form input

MAIN FLOW:
1. User inputs username and password
2. Server sends an HTTP 200 response with a token in the header
3. Browser sends a GET request to https://the-internet.herokuapp.com/basic_auth
4. Server sends an HTTP 200 response with a token in the header
5. Browser displays the login success message
6. User inputs username and password
7. Server sends an HTTP 200 response with a token in the header
8. Browser sends a GET request to https://the-internet.herokuapp.com/basic_auth
9. 4. Server sends an HTTP 200 response with a token in the header
10. 5. Browser displays the login success message
11. Alternative flow:
12. User inputs username and password again
13. Server sends an HTTP 200 response with a token in the header
14. Browser displays the login success message
15. User inputs username and password
16. Server sends an HTTP 200 response with a token in the header
17. Browser sends a GET request to https://the-internet.herokuapp.com/basic_auth
18. 4. Server sends an HTTP 200 response with a token in the header
19. 5. Browser displays the login form with username and password inputs
20. 6. User inputs username and password
21. 7. Server sends an HTTP 200 response with a token in the header
22. 8. Browser displays the login form with username and password inputs
23. 9. User inputs username and password again
24. 10. Server sends an HTTP 200 response with a token in the header
25. 11. Browser displays the login form with username and password inputs
26. 12. User inputs username and password again
27. 13. Server sends an HTTP 200 response with a token in the header
28. 14. Browser displays the login form with username and password inputs
29. 15. User inputs username and password again
30. 16. Server sends an HTTP 200 response with a token in the header
31. 17. Browser displays the login form with username and password inputs
32. 18. User inputs username and password again
33. 19. Server sends an HTTP 200 response with a token in the header
34. 20. Browser displays the login form with username and password inputs
35. Alternative flow:
36. User inputs username and password again
37. Server sends an HTTP 200 response with a token in the header
38. Browser displays the login form with username and password inputs
39. User inputs username and password again
40. Server sends an HTTP 200 response with a token in the header
41. Browser displays the login form with username and password inputs
42. User inputs username and password again
43. Server sends an HTTP 200 response with a token in the header
44. Browser displays the login form with username and password inputs
45. User inputs username and password again
46. Server sends an HTTP 200 response with a token in the header
47. Browser displays the login form with username and password inputs
48. User inputs username and password again
49. Server sends an HTTP 200 response with a token in the header
50. Browser displays the login form with username and password inputs
51. User inputs username and password again
52. Server sends an HTTP 200 response with a token in the header
53. Browser displays the login form with username and password inputs
54. User inputs username and password again
55. Server sends an HTTP 200 response with a token in the header
56. Browser displays the login form with username and password inputs
57. User inputs username and password again
58. Server sends an HTTP 200 response with a token in the header
59. Browser displays the login form with

ALTERNATIVE FLOWS:
None

POSTCONDITIONS:
1. User: The user making a login request
2. Username: The user's username input
3. Password: The user's password input
4. Token: The token sent by the server after successful login
5. Token in header: The token sent by the server in the response header
6. Success message: The success message displayed by the browser after login
7. Example:
8. Browser displays the login success message
9. Example:

NOTES:
None
